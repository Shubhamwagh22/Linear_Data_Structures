''' The Tower of Hanoi is a classic problem in computer science and mathematics. It consists of three rods and a number of disks of different sizes, which can be slid onto any rod. The puzzle starts with the disks in a neat stack in ascending order of size on one rod, the smallest at the top, making a conical shape.

The objective of the puzzle is to move the entire stack to another rod, obeying the following rules:

Only one disk can be moved at a time.
Each move consists of taking the upper disk from one of the stacks and placing it on top of another stack or an empty rod.
No disk may be placed on top of a smaller disk. '''

def tower_of_hanoi(n, source, auxiliary, target):
    if n == 1:
        print(f"Move disk 1 from {source} to {target}")
        return
    tower_of_hanoi(n - 1, source, target, auxiliary)
    print(f"Move disk {n} from {source} to {target}")
    tower_of_hanoi(n - 1, auxiliary, source, target)


no_of_disc = 3
tower_of_hanoi(no_of_disc, 'A', 'B', 'C')


################################################
Output:
Move disk 1 from A to C
Move disk 2 from A to B
Move disk 1 from C to B
Move disk 3 from A to C
Move disk 1 from B to A
Move disk 2 from B to C
Move disk 1 from A to C
